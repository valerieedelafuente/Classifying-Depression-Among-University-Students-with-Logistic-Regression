mutate(depression = case_when(
depression == 0 ~ "No",
depression == 1 ~ "Yes"
))
# Factorizing the `depression` variable
depression_data$depression <- factor(depression_data$depression)
rating_var <- depression_data %>%
select(academic_pressure, work_pressure, job_satisfaction, study_satisfaction, financial_stress)
# people with job satisfaction > 0
good_job <- depression_data %>% filter(job_satisfaction > 0)
good_job %>% nrow()
good_job %>% filter(job_satisfaction == max(job_satisfaction))
# ascending order
depression_data %>% filter(work_pressure > 0) %>% arrange(work_pressure)
other_numeric_var <- depression_data %>% select_if(is.numeric) %>% select(-(rating_var %>% colnames))
library(corrplot)
cor(depression_data %>%
select_if(is.numeric)) %>%
corrplot(type="lower", diag = FALSE, method = "number")
table(depression_data$work_pressure)
table(depression_data$job_satisfaction)
summary(depression_data$age)
summary(depression_data$cum_gpa)
# There are a handful of students with 0 GPA
# This slightly affects mean but minimally
depression_data %>% filter(cum_gpa != 0) %>%
select(cum_gpa) %>%
summary()
round(prop.table(table(depression_data$depression)), digits = 3)
round(prop.table(table(depression_data$suicidal_thoughts)), digits = 3)
round(prop.table(table(depression_data$fam_mental_illness)), digits = 3)
summary(depression_data$work_study_hours)
round(prop.table(table(depression_data$dietary_habits)), digits = 4)
round(prop.table(table(depression_data$sleep_duration)), digits = 3)
round(prop.table(table(depression_data$academic_pressure)), digits = 4)
round(prop.table(table(depression_data$financial_stress)), digits = 3)
round(prop.table(table(depression_data$study_satisfaction)), digits = 4)
depression_data %>%
ggplot(aes(x=dietary_habits, fill = depression)) +
geom_bar(position = "dodge") +
labs(x = "Dietary Habits", y = "Number of Students",
title = "Presence of Depression by Dietary Habits",
fill = "Presence of Depression")
depression_data %>%
filter(dietary_habits != "Other") %>%
ggplot(aes(x=dietary_habits, fill = depression)) +
geom_bar(position = "dodge") +
labs(x = "Dietary Habits", y = "Number of Students",
title = "Presence of Depression by Dietary Habits",
fill = "Presence of Depression")
depression_data %>%
ggplot(aes(x=sleep_duration, fill = depression)) +
geom_bar(position = "dodge") +
labs(x = "Sleep Duration", y = "Number of Students",
title = "Depression by Sleep Duration",
fill = "Depression")
depression_data %>%
filter(sleep_duration != "Other") %>%
ggplot(aes(x=sleep_duration, fill = depression)) +
geom_bar(position = "dodge") +
labs(x = "Sleep Duration", y = "Number of Students",
title = "Depression by Sleep Duration",
fill = "Depression")
depression_data %>%
ggplot(aes(x=academic_pressure, fill = depression)) +
geom_bar(position = "dodge") +
labs(x = "Academic Pressure 0-5 (0 = No Pressure)", y = "Number of Students",
title = "Depresion by Academic Pressure",
fill = "Depression")
depression_data %>%
mutate(academic_pressure = case_when(
academic_pressure == 0 ~ 1,
TRUE ~ academic_pressure)) %>%
ggplot(aes(x=academic_pressure, fill = depression)) +
geom_bar(position = "dodge") +
labs(x = "Academic Pressure 1-5 (1 = Least Pressure)", y = "Number of Students",
title = "Depresion by Academic Pressure",
fill = "Depression")
depression_data %>%
ggplot(aes(x = depression, y = academic_pressure)) +
geom_boxplot(alpha = 0)
depression_data %>%
ggplot(aes(x=financial_stress, fill = depression)) +
geom_bar(position = "dodge") +
labs(x = "Financial Stress 1-5 (0 = Least Stress)", y = "Number of Students",
title = "Depresion by Financial Stress",
fill = "Depression")
depression_data %>%
ggplot(aes(x = depression, y = financial_stress)) +
geom_boxplot(alpha = 0)
# For dietary habits
ggplot(depression_data, aes(x = dietary_habits, fill = factor(depression))) +
geom_bar(position = "fill", color = "black") +
scale_y_continuous(labels = scales::percent) +
labs(title = "Depression Distribution by Dietary Habit",
x = "Dietary Habit", y = "Proportion",
fill = "Depression") +
theme_bw(base_size = 12) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Convert 'depression' factor to numeric: "No" = 0, "Yes" = 1
depression_data <- depression_data %>%
mutate(depression_numeric = as.numeric(depression) - 1)
# Create summarized depression rates and standard errors by sleep duration
sleep_summary <- depression_data %>%
group_by(sleep_duration) %>%
summarise(
mean_dep = mean(depression_numeric, na.rm = TRUE),
se = sd(depression_numeric, na.rm = TRUE) / sqrt(n())
)
# Bar plot with error bars
ggplot(sleep_summary, aes(x = sleep_duration, y = mean_dep, fill = sleep_duration)) +
geom_col(show.legend = FALSE) +
labs(
title = "Depression Rate by Sleep Duration",
x = "Sleep Duration",
y = "Mean Depression Rate"
) +
theme_minimal(base_size = 13) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
depression_data$financial_stress <- as.numeric(depression_data$financial_stress)
depression_data$total_stress <- depression_data$academic_pressure +
depression_data$work_pressure +
depression_data$financial_stress
ggplot(depression_data, aes(x = factor(depression), y = total_stress, fill = factor(depression))) +
geom_boxplot() +
labs(title = "Total Reported Stress vs Depression", x = "Depression (0 = No, 1 = Yes)", y = "Total Stress") +
theme_minimal()
setwd("~/Documents/PSTAT 100/finalproject/PSTAT-100-Project")
knitr::opts_chunk$set(message =  FALSE)
knitr::opts_chunk$set(warning =  FALSE)
knitr::opts_chunk$set(error =  FALSE)
bfcolor <- function(x, color) {
if (knitr::is_latex_output()) {
sprintf("\\textcolor{%s}{\\textbf{%s}}", color, x)
} else if (knitr::is_html_output()) {
sprintf("<span style='color: %s;'><b>%s</b></span>", color, x)
} else x
}
# Load necessary packages
library(readr)
library(tidyverse)
library(naniar)
library(janitor)
# Load in the data
depression_data <- read.csv("data/student_depression_dataset.csv")
# View the dataset
head(depression_data)
# Examine the dimensions
dim(depression_data)
# Fix column names
depression_data <- depression_data %>%
clean_names() %>%
rename(
cum_gpa = cgpa,
suicidal_thoughts = have_you_ever_had_suicidal_thoughts,
fam_mental_illness = family_history_of_mental_illness
)
# Check if names were fixed
names(depression_data)
# View missing data
sum(is.na(depression_data))
# Fixing the `financial_stress` variable
depression_data <- depression_data %>%
mutate(
financial_stress = as.numeric(financial_stress),
# convert string numbers to integers
financial_stress = case_when(
financial_stress == "?" ~ NA,
# convert "?" to NA values
.default = financial_stress))
sum(is.na(depression_data))
library(naniar)
depression_data %>% vis_miss()
depression_data <- depression_data %>% na.omit()
depression_data %>% dim()
# Factorizing the `gender` variable
depression_data$gender <- factor(depression_data$gender)
# Fixing the `city` variable to change invalid entries
depression_data <- depression_data %>%
mutate(city = case_when(
city == "Khaziabad" ~ "Ghaziabad",
city == "Nalyan" ~ "Kalyan",
city == "'Less Delhi'" ~ "Delhi",
city == "'Less than 5 Kalyan'" ~ "Kalyan",
city == "3.0" ~ "Other",
city == "Saanvi" ~ "Other",
city == "M.Tech" ~ "Other",
city == "Bhavna" ~ "Other",
city == "City" ~ "Other",
city == "Mira" ~ "Other",
city == "Harsha" ~ "Other",
city == "Vaanya" ~ "Other",
city == "Gaurav" ~ "Other",
city == "Harsh" ~ "Other",
city == "Reyansh" ~ "Other",
city == "Kibara" ~ "Other",
city == "Rashi" ~ "Other",
city == "ME" ~ "Other",
city == "M.Com" ~ "Other",
city == "Mihir" ~ "Other",
city == "Nalini" ~ "Other",
city == "Nandini" ~ "Other",
TRUE ~ city  # Leave valid entries as they are
))
# # Fixing the `profession` variable to change invalid entries
depression_data <- depression_data %>%
mutate(profession = case_when(
profession == "'Civil Engineer'" ~ "Civil Engineer",
profession == "'UX/UI Designer'" ~ "UX/UI Designer",
profession == "'Digital Marketer'" ~ "Digital Marketer",
profession == "'Content Writer'" ~ "Content Writer",
profession == "'Educational Consultant'" ~ "Educational Consultant",
TRUE ~ profession # Leave valid entries as they are
))
# Fixing the `work_pressure` variable for proper scaling
depression_data <- depression_data %>%
mutate(work_pressure = case_when(
work_pressure == 0 ~ 0,
work_pressure == 2 ~ 1,
work_pressure == 5 ~ 3
))
# Fixing the `sleep_duration` variable to change invalid entries
depression_data <- depression_data %>%
mutate(sleep_duration = case_when(
sleep_duration == "'5-6 hours'" ~ "5-6 hours",
sleep_duration == "'Less than 5 hours'" ~ "Less than 5 hours",
sleep_duration == "'7-8 hours'" ~ "7-8 hours",
sleep_duration == "'More than 8 hours'" ~ "More than 8 hours",
sleep_duration == "Others" ~ "Other"
))
# Factorizing the `sleep_duration` variable
depression_data <- depression_data %>%
mutate(sleep_duration = factor(sleep_duration,
levels = c("Less than 5 hours",
"5-6 hours",
"7-8 hours",
"More than 8 hours",
"Other"),
ordered = TRUE))
# Fixing the `dietary_habits` variable to change misspelling
depression_data <- depression_data %>%
mutate(dietary_habits = case_when(
dietary_habits == "Others" ~ "Other",
TRUE ~ dietary_habits
))
# Factorizing the `dietary_habits` variable
depression_data <- depression_data %>%
mutate(dietary_habits = factor(dietary_habits,
levels = c("Healthy", "Moderate", "Unhealthy",
"Other"),
ordered = TRUE))
# Fixing the `degree` variable to change invalid entries
depression_data <- depression_data %>%
mutate(degree = case_when(
degree == "'Class 12'" ~ "High School",
degree == "Others" ~ "Other",
# Others could less than HS education or totally unknown.
.default = degree
))
# Factorizing the `degree variable`
degree_levels <- c(
"High School",
"BA", "BSc", "B.Com", "BCA", "B.Pharm", "B.Ed", "B.Tech", "BE", "BHM", "B.Arch", "BBA",
"MA", "MSc", "MBA", "M.Com", "MCA", "M.Tech", "M.Ed", "M.Pharm", "MHM",
"LLB", "LLM", "MD", "MBBS",
"PhD",
"Other"
)
depression_data <- depression_data %>%
mutate(degree = factor(degree, levels = degree_levels, ordered = TRUE))
# Factorizing the `suicidal_thoughts` variable
depression_data$suicidal_thoughts <- factor(depression_data$suicidal_thoughts)
# Factorizing the `fam_mental_illness` variable
depression_data$fam_mental_illness <- factor(depression_data$fam_mental_illness)
# Turning the `depression` variable back to "yes" and "no" for visualization purposes
depression_data <- depression_data %>%
mutate(depression = case_when(
depression == 0 ~ "No",
depression == 1 ~ "Yes"
))
# Factorizing the `depression` variable
depression_data$depression <- factor(depression_data$depression)
rating_var <- depression_data %>%
select(academic_pressure, work_pressure, job_satisfaction, study_satisfaction, financial_stress)
# people with job satisfaction > 0
good_job <- depression_data %>% filter(job_satisfaction > 0)
good_job %>% nrow()
good_job %>% filter(job_satisfaction == max(job_satisfaction))
# ascending order
depression_data %>% filter(work_pressure > 0) %>% arrange(work_pressure)
other_numeric_var <- depression_data %>% select_if(is.numeric) %>% select(-(rating_var %>% colnames))
library(corrplot)
cor(depression_data %>%
select_if(is.numeric)) %>%
corrplot(type="lower", diag = FALSE, method = "number")
table(depression_data$work_pressure)
table(depression_data$job_satisfaction)
summary(depression_data$age)
summary(depression_data$cum_gpa)
# There are a handful of students with 0 GPA
# This slightly affects mean but minimally
depression_data %>% filter(cum_gpa != 0) %>%
select(cum_gpa) %>%
summary()
round(prop.table(table(depression_data$depression)), digits = 3)
round(prop.table(table(depression_data$suicidal_thoughts)), digits = 3)
round(prop.table(table(depression_data$fam_mental_illness)), digits = 3)
summary(depression_data$work_study_hours)
round(prop.table(table(depression_data$dietary_habits)), digits = 4)
round(prop.table(table(depression_data$sleep_duration)), digits = 3)
round(prop.table(table(depression_data$academic_pressure)), digits = 4)
round(prop.table(table(depression_data$financial_stress)), digits = 3)
round(prop.table(table(depression_data$study_satisfaction)), digits = 4)
depression_data %>%
ggplot(aes(x=dietary_habits, fill = depression)) +
geom_bar(position = "dodge") +
labs(x = "Dietary Habits", y = "Number of Students",
title = "Presence of Depression by Dietary Habits",
fill = "Presence of Depression")
depression_data %>%
filter(dietary_habits != "Other") %>%
ggplot(aes(x=dietary_habits, fill = depression)) +
geom_bar(position = "dodge") +
labs(x = "Dietary Habits", y = "Number of Students",
title = "Presence of Depression by Dietary Habits",
fill = "Presence of Depression")
depression_data %>%
ggplot(aes(x=sleep_duration, fill = depression)) +
geom_bar(position = "dodge") +
labs(x = "Sleep Duration", y = "Number of Students",
title = "Depression by Sleep Duration",
fill = "Depression")
depression_data %>%
filter(sleep_duration != "Other") %>%
ggplot(aes(x=sleep_duration, fill = depression)) +
geom_bar(position = "dodge") +
labs(x = "Sleep Duration", y = "Number of Students",
title = "Depression by Sleep Duration",
fill = "Depression")
depression_data %>%
ggplot(aes(x=academic_pressure, fill = depression)) +
geom_bar(position = "dodge") +
labs(x = "Academic Pressure 0-5 (0 = No Pressure)", y = "Number of Students",
title = "Depresion by Academic Pressure",
fill = "Depression")
depression_data %>%
mutate(academic_pressure = case_when(
academic_pressure == 0 ~ 1,
TRUE ~ academic_pressure)) %>%
ggplot(aes(x=academic_pressure, fill = depression)) +
geom_bar(position = "dodge") +
labs(x = "Academic Pressure 1-5 (1 = Least Pressure)", y = "Number of Students",
title = "Depresion by Academic Pressure",
fill = "Depression")
depression_data %>%
ggplot(aes(x = depression, y = academic_pressure)) +
geom_boxplot(alpha = 0)
depression_data %>%
ggplot(aes(x=financial_stress, fill = depression)) +
geom_bar(position = "dodge") +
labs(x = "Financial Stress 1-5 (0 = Least Stress)", y = "Number of Students",
title = "Depresion by Financial Stress",
fill = "Depression")
depression_data %>%
ggplot(aes(x = depression, y = financial_stress)) +
geom_boxplot(alpha = 0)
# For dietary habits
ggplot(depression_data, aes(x = dietary_habits, fill = factor(depression))) +
geom_bar(position = "fill", color = "black") +
scale_y_continuous(labels = scales::percent) +
labs(title = "Depression Distribution by Dietary Habit",
x = "Dietary Habit", y = "Proportion",
fill = "Depression") +
theme_bw(base_size = 12) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Convert 'depression' factor to numeric: "No" = 0, "Yes" = 1
depression_data <- depression_data %>%
mutate(depression_numeric = as.numeric(depression) - 1)
# Create summarized depression rates and standard errors by sleep duration
sleep_summary <- depression_data %>%
group_by(sleep_duration) %>%
summarise(
mean_dep = mean(depression_numeric, na.rm = TRUE),
se = sd(depression_numeric, na.rm = TRUE) / sqrt(n())
)
# Bar plot with error bars
ggplot(sleep_summary, aes(x = sleep_duration, y = mean_dep, fill = sleep_duration)) +
geom_col(show.legend = FALSE) +
labs(
title = "Depression Rate by Sleep Duration",
x = "Sleep Duration",
y = "Mean Depression Rate"
) +
theme_minimal(base_size = 13) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
depression_data$financial_stress <- as.numeric(depression_data$financial_stress)
depression_data$total_stress <- depression_data$academic_pressure +
depression_data$work_pressure +
depression_data$financial_stress
ggplot(depression_data, aes(x = factor(depression), y = total_stress, fill = factor(depression))) +
geom_boxplot() +
labs(title = "Total Reported Stress vs Depression", x = "Depression (0 = No, 1 = Yes)", y = "Total Stress") +
theme_minimal()
# Load necessary packages
library(readr)
library(tidyverse)
library(naniar)
library(janitor)
# Load in the data
depression_data <- read.csv("data/student_depression_dataset.csv")
# View the dataset
head(depression_data)
# Examine the dimensions
dim(depression_data)
setwd("~/Documents/PSTAT 100/finalproject/PSTAT-100-Project")
# Load necessary packages
library(readr)
library(tidyverse)
library(naniar)
library(janitor)
# Load in the data
depression_data <- read.csv("data/student_depression_dataset.csv")
# View the dataset
head(depression_data)
# Examine the dimensions
dim(depression_data)
library(readr)
library(tidyverse)
library(naniar)
library(janitor)
# Load in the data
depression_data <- read.csv("data/student_depression_dataset.csv")
# Load necessary packages
library(readr)
library(tidyverse)
library(naniar)
library(janitor)
# Load in the data
depression_data <- read.csv("data/student_depression_dataset.csv")
# View the dataset
head(depression_data)
# Examine the dimensions
dim(depression_data)
setwd("~/Documents/PSTAT 100/finalproject/PSTAT-100-Project")
# Load necessary packages
library(readr)
library(tidyverse)
library(naniar)
library(janitor)
# Load in the data
depression_data <- read.csv("data/student_depression_dataset.csv")
# View the dataset
head(depression_data)
# Examine the dimensions
dim(depression_data)
setwd("~/Documents/PSTAT 100/finalproject/PSTAT-100-Project")
pwd
getwd()
# Load necessary packages
library(readr)
library(tidyverse)
library(naniar)
library(janitor)
setwd("~/Documents/PSTAT 100/finalproject/PSTAT-100-Project")
# Load in the data
depression_data <- read.csv("data/student_depression_dataset.csv")
# View the dataset
head(depression_data)
# Examine the dimensions
dim(depression_data)
# Load necessary packages
library(readr)
library(tidyverse)
library(naniar)
library(janitor)
# Load in the data
depression_data <- read.csv("data/student_depression_dataset.csv")
# View the dataset
head(depression_data)
# Examine the dimensions
dim(depression_data)
# Load in the data
depression_data <- read.csv("data/student_depression_dataset.csv")
setwd("~/Documents/PSTAT 100/finalproject/PSTAT-100-Project")
# Load in the data
depression_data <- read.csv("data/student_depression_dataset.csv")
# View the dataset
head(depression_data)
# Load necessary packages
library(readr)
library(tidyverse)
library(naniar)
library(janitor)
setwd("~/Documents/PSTAT 100/finalproject/PSTAT-100-Project")
# Load in the data
depression_data <- read.csv("data/student_depression_dataset.csv")
# View the dataset
head(depression_data)
# Examine the dimensions
dim(depression_data)
# Load necessary packages
library(readr)
library(tidyverse)
library(naniar)
library(janitor)
#setwd("~/Documents/PSTAT 100/finalproject/PSTAT-100-Project")
# Load in the data
depression_data <- read.csv("data/student_depression_dataset.csv")
# View the dataset
head(depression_data)
# Examine the dimensions
dim(depression_data)
