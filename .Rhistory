bfcolor <- function(x, color) {
if (knitr::is_latex_output()) {
sprintf("\\textcolor{%s}{\\textbf{%s}}", color, x)
} else if (knitr::is_html_output()) {
sprintf("<span style='color: %s;'><b>%s</b></span>", color, x)
} else x
}
# Load necessary packages
library(readr)
library(tidyverse)
library(naniar)
library(janitor)
# Load in the data
depression_data <- read.csv("data/student_depression_dataset.csv")
# View the dataset
head(depression_data)
# Examine the dimensions
dim(depression_data)
# Fix column names
depression_data <- depression_data %>%
clean_names() %>%
rename(
gpa = cgpa,
suicidal_thoughts = have_you_ever_had_suicidal_thoughts,
fam_mental_illness = family_history_of_mental_illness
)
# Check if names were fixed
names(depression_data)
# View missing data
vis_miss(depression_data)
knitr::opts_chunk$set(message =  FALSE)
knitr::opts_chunk$set(warning =  FALSE)
knitr::opts_chunk$set(error =  FALSE)
bfcolor <- function(x, color) {
if (knitr::is_latex_output()) {
sprintf("\\textcolor{%s}{\\textbf{%s}}", color, x)
} else if (knitr::is_html_output()) {
sprintf("<span style='color: %s;'><b>%s</b></span>", color, x)
} else x
}
# Load necessary packages
library(readr)
library(tidyverse)
library(naniar)
library(janitor)
# Load in the data
depression_data <- read.csv("data/student_depression_dataset.csv")
# View the dataset
head(depression_data)
# Examine the dimensions
dim(depression_data)
# Fix column names
depression_data <- depression_data %>%
clean_names() %>%
rename(
gpa = cgpa,
suicidal_thoughts = have_you_ever_had_suicidal_thoughts,
fam_mental_illness = family_history_of_mental_illness
)
# Check if names were fixed
names(depression_data)
# View missing data
vis_miss(depression_data)
knitr::opts_chunk$set(message =  FALSE)
knitr::opts_chunk$set(warning =  FALSE)
knitr::opts_chunk$set(error =  FALSE)
bfcolor <- function(x, color) {
if (knitr::is_latex_output()) {
sprintf("\\textcolor{%s}{\\textbf{%s}}", color, x)
} else if (knitr::is_html_output()) {
sprintf("<span style='color: %s;'><b>%s</b></span>", color, x)
} else x
}
# Load necessary packages
library(readr)
library(tidyverse)
library(naniar)
library(janitor)
# Load in the data
depression_data <- read.csv("data/student_depression_dataset.csv")
# View the dataset
head(depression_data)
# Examine the dimensions
dim(depression_data)
# Fix column names
depression_data <- depression_data %>%
clean_names() %>%
rename(
gpa = cgpa,
suicidal_thoughts = have_you_ever_had_suicidal_thoughts,
fam_mental_illness = family_history_of_mental_illness
)
# Check if names were fixed
names(depression_data)
# Check if missing data is omitted
sum(is.na(depression_data))
# Filter out missing data because it is only 3 obs and appears to be missing at random
depression_data <- depression_data %>%
na.omit
knitr::opts_chunk$set(message =  FALSE)
knitr::opts_chunk$set(warning =  FALSE)
knitr::opts_chunk$set(error =  FALSE)
bfcolor <- function(x, color) {
if (knitr::is_latex_output()) {
sprintf("\\textcolor{%s}{\\textbf{%s}}", color, x)
} else if (knitr::is_html_output()) {
sprintf("<span style='color: %s;'><b>%s</b></span>", color, x)
} else x
}
# Load necessary packages
library(readr)
library(tidyverse)
library(naniar)
library(janitor)
# Load in the data
depression_data <- read.csv("data/student_depression_dataset.csv")
# View the dataset
head(depression_data)
# Examine the dimensions
dim(depression_data)
# Fix column names
depression_data <- depression_data %>%
clean_names() %>%
rename(
gpa = cgpa,
suicidal_thoughts = have_you_ever_had_suicidal_thoughts,
fam_mental_illness = family_history_of_mental_illness
)
# Check if names were fixed
names(depression_data)
# View missing data
vis_miss(depression_data)
# Filter out missing data because it is only 3 obs and appears to be missing at random
depression_data <- depression_data %>%
na.omit
# Check if missing data is omitted
sum(is.na(depression_data))
# View missing data
sum(is.na(depression_data))
# Check data types of the variables
str(depression_data)
table(depression_data$id)
table(depression_data$gender)
table(depression_data$age)
table(depression_data$city)
unique(depression_data$city)
unique(depresison_data$profession)
unique(depression_data$profession)
unique(depression_data$academic_pressure)
unique(depression_data$work_pressure)
unique(depression_data$gpa)
table(depression_data$gpa)
unique(depression_data$study_satisfaction)
unique(depression_data$job_satisfaction)
unique(depression_data$sleep_duration)
unique(depression_data$work_pressure)
unique(depression_data$job_satisfaction)
unique(depression_data$dietary_habits)
unique(depression$degree)
unique(depression_data$degree)
unique(depression_data$suicidal_thoughts)
unique(depression_data$work_study_hours)
unique(depression_data$financial_stress)
unique(depression_data$fam_mental_illness)
unique(depression_data$depression)
# Check data types of the variables
str(depression_data)
# Factorizing the `gender` variable
df$gender <- factor(df$gender)
# Factorizing the `gender` variable
depression_data$gender <- factor(depression_data$gender)
unique(depression_data$city)
# Fixing the `city` variable to remove invalid entries
depression_data <- depression_data %>%
mutate(city = case_when(
city == "Khaziabad" ~ "Ghaziabad",
city == "Nalyan" ~ "Kalyan",
city == "'Less Delhi'" ~ "Delhi",
city == "'Less than 5 Kalyan'" ~ "Kalyan",
city == "3.0" ~ NA_character_,
city == "Saanvi" ~ NA_character_,
city == "M.Tech" ~ NA_character_,
city == "Bhavna" ~ NA_character_,
city == "City" ~ NA_character_,
city == "Mira" ~ NA_character_,
city == "Harsha" ~ NA_character_,
city == "Vaanya" ~ NA_character_,
city == "Gaurav" ~ NA_character_,
city == "Harsh" ~ NA_character_,
city == "Reyansh" ~ NA_character_,
city == "Kibara" ~ NA_character_,
city == "Rashi" ~ NA_character_,
city == "ME" ~ NA_character_,
city == "M.Com" ~ NA_character_,
city == "Mihir" ~ NA_character_,
city == "Nalini" ~ NA_character_,
city == "Nandini" ~ NA_character_,
TRUE ~ city  # Leave valid entries as they are
))
unique(depression_data$city)
unique(depression_data$profession)
# Check data types of the variables
str(depression_data)
unique(depression_data$work_pressure)
unique(depression_data$work_pressure)
# Check data types of the variables
str(depression_data)
unique(depression_data$study_satisfaction)
unique(depression_data$job_satisfaction)
unique(depression_data$sleep_duration)
unique(depression_data$dietary_habits)
unique(depression_data$degree)
# Check data types of the variables
str(depression_data)
unique(depression_data$suicidal_thoughts)
unique(depression_data$fam_mental_illness)
knitr::opts_chunk$set(message =  FALSE)
knitr::opts_chunk$set(warning =  FALSE)
knitr::opts_chunk$set(error =  FALSE)
bfcolor <- function(x, color) {
if (knitr::is_latex_output()) {
sprintf("\\textcolor{%s}{\\textbf{%s}}", color, x)
} else if (knitr::is_html_output()) {
sprintf("<span style='color: %s;'><b>%s</b></span>", color, x)
} else x
}
# Load necessary packages
library(readr)
library(tidyverse)
library(naniar)
library(janitor)
# Load in the data
depression_data <- read.csv("data/student_depression_dataset.csv")
# View the dataset
head(depression_data)
# Examine the dimensions
dim(depression_data)
# Fix column names
depression_data <- depression_data %>%
clean_names() %>%
rename(
cum_gpa = cgpa,
suicidal_thoughts = have_you_ever_had_suicidal_thoughts,
fam_mental_illness = family_history_of_mental_illness
)
# Check if names were fixed
names(depression_data)
# View missing data
sum(is.na(depression_data))
# Check data types of the variables
str(depression_data)
# Factorizing the `gender` variable
depression_data$gender <- factor(depression_data$gender)
# Fixing the `city` variable to change invalid entries
depression_data <- depression_data %>%
mutate(city = case_when(
city == "Khaziabad" ~ "Ghaziabad",
city == "Nalyan" ~ "Kalyan",
city == "'Less Delhi'" ~ "Delhi",
city == "'Less than 5 Kalyan'" ~ "Kalyan",
city == "3.0" ~ "Other",
city == "Saanvi" ~ "Other",
city == "M.Tech" ~ "Other",
city == "Bhavna" ~ "Other",
city == "City" ~ "Other",
city == "Mira" ~ "Other",
city == "Harsha" ~ "Other",
city == "Vaanya" ~ "Other",
city == "Gaurav" ~ "Other",
city == "Harsh" ~ "Other",
city == "Reyansh" ~ "Other",
city == "Kibara" ~ "Other",
city == "Rashi" ~ "Other",
city == "ME" ~ "Other",
city == "M.Com" ~ "Other",
city == "Mihir" ~ "Other",
city == "Nalini" ~ "Other",
city == "Nandini" ~ "Other",
TRUE ~ city  # Leave valid entries as they are
))
# Fixing the `profession` variable to change invalid entries
depression_data <- depression_data %>%
mutate(profession = case_when(
profession == "'Civil Engineer'" ~ "Civil Engineer",
profession == "'UX/UI Designer'" ~ "UX/UI Designer",
profession == "'Digital Marketer'" ~ "Digital Marketer",
profession == "'Content Writer'" ~ "Content Writer",
profession == "'Educational Consultant'" ~ "Educational Consultant",
TRUE ~ profession # Leave valid entries as they are
))
# Fixing the `work_pressure` variable for proper scaling
depression_data <- depression_data %>%
mutate(work_pressure = case_when(
work_pressure == 0 ~ 0,
work_pressure == 2 ~ 1,
work_pressure == 5 ~ 3
))
# Fixing the `sleep_duration` variable to change invalid entries
depression_data <- depression_data %>%
mutate(sleep_duration = case_when(
sleep_duration == "'5-6 hours'" ~ "5-6 hours",
sleep_duration == "'Less than 5 hours'" ~ "Less than 5 hours",
sleep_duration == "'7-8 hours'" ~ "7-8 hours",
sleep_duration == "'More than 8 hours'" ~ "More than 8 hours",
sleep_duration == "Others" ~ "Other"
))
# Factorizing the `sleep_duration` variable
depression_data <- depression_data %>%
mutate(sleep_duration = factor(sleep_duration,
levels = c("Less than 5 hours",
"5-6 hours",
"7-8 hours",
"More than 8 hours",
"Other"),
ordered = TRUE))
# Fixing the `dietary_habits` variable to change misspelling
depression_data <- depression_data %>%
mutate(dietary_habits = case_when(
dietary_habits == "Others" ~ "Other",
TRUE ~ dietary_habits
))
# Factorizing the `dietary_habits` variable
depression_data <- depression_data %>%
mutate(dietary_habits = factor(dietary_habits,
levels = c("Healthy", "Moderate", "Unhealthy",
"Other"),
ordered = TRUE))
# Fixing the `degree` variable to change invalid entries
depression_data <- depression_data %>%
mutate(degree = case_when(
degree == "'Class 12'" ~ "Diploma",
degree == "ME" ~ "M.Tech",
degree == "BSc" ~ "B.Sc.",
degree == "BCA" ~ "B.C.A.",
degree == "High School" ~ "Other",
TRUE ~ degree
))
# Factorizing the `degree variable`
degree_levels <- c(
"High School",
"BA", "B.Sc.", "B.Com", "B.C.A.", "B.Pharm", "B.Ed", "B.Tech", "BE", "BHM", "B.Arch", "BBA",
"MA", "MSc", "MBA", "M.Com", "MCA", "M.Tech", "M.Ed", "M.Pharm", "MHM",
"LLB", "LLM", "MD", "MBBS",
"PhD",
"Others"
)
depression_data <- depression_data %>%
mutate(degree = factor(degree, levels = degree_levels, ordered = TRUE))
# Factorizing the `suicidal_thoughts` variable
depression_data$suicidal_thoughts <- factor(depression_data$suicidal_thoughts)
# Fixing the `financial_stress` variable
depression_data$suicidal_thoughts <- as.integer(depression_data$suicidal_thoughts)
# Factorizing the `fam_mental_illness` variable
depression_data$fam_mental_illness <- factor(depression_data$fam_mental_illness)
# Turing the `depression` variable back to "yes" and "no" for visualization purposes
depression_data <- depression_data %>%
mutate(depression = case_when(
depression == 0 ~ "No",
depression == 1 ~ "Yes"
))
# Factorizing the `depression` variable
depression_data$depression <- factor(depression_data$depression)
# Check data types of the variables again to ensure everything was properly done
str(depression_data)
knitr::opts_chunk$set(message =  FALSE)
knitr::opts_chunk$set(warning =  FALSE)
knitr::opts_chunk$set(error =  FALSE)
bfcolor <- function(x, color) {
if (knitr::is_latex_output()) {
sprintf("\\textcolor{%s}{\\textbf{%s}}", color, x)
} else if (knitr::is_html_output()) {
sprintf("<span style='color: %s;'><b>%s</b></span>", color, x)
} else x
}
# Load necessary packages
library(readr)
library(tidyverse)
library(naniar)
library(janitor)
# Load in the data
depression_data <- read.csv("data/student_depression_dataset.csv")
# View the dataset
head(depression_data)
# Examine the dimensions
dim(depression_data)
# Fix column names
depression_data <- depression_data %>%
clean_names() %>%
rename(
cum_gpa = cgpa,
suicidal_thoughts = have_you_ever_had_suicidal_thoughts,
fam_mental_illness = family_history_of_mental_illness
)
# Check if names were fixed
names(depression_data)
# View missing data
sum(is.na(depression_data))
# Check data types of the variables
str(depression_data)
# Factorizing the `gender` variable
depression_data$gender <- factor(depression_data$gender)
# Fixing the `city` variable to change invalid entries
depression_data <- depression_data %>%
mutate(city = case_when(
city == "Khaziabad" ~ "Ghaziabad",
city == "Nalyan" ~ "Kalyan",
city == "'Less Delhi'" ~ "Delhi",
city == "'Less than 5 Kalyan'" ~ "Kalyan",
city == "3.0" ~ "Other",
city == "Saanvi" ~ "Other",
city == "M.Tech" ~ "Other",
city == "Bhavna" ~ "Other",
city == "City" ~ "Other",
city == "Mira" ~ "Other",
city == "Harsha" ~ "Other",
city == "Vaanya" ~ "Other",
city == "Gaurav" ~ "Other",
city == "Harsh" ~ "Other",
city == "Reyansh" ~ "Other",
city == "Kibara" ~ "Other",
city == "Rashi" ~ "Other",
city == "ME" ~ "Other",
city == "M.Com" ~ "Other",
city == "Mihir" ~ "Other",
city == "Nalini" ~ "Other",
city == "Nandini" ~ "Other",
TRUE ~ city  # Leave valid entries as they are
))
# Fixing the `profession` variable to change invalid entries
depression_data <- depression_data %>%
mutate(profession = case_when(
profession == "'Civil Engineer'" ~ "Civil Engineer",
profession == "'UX/UI Designer'" ~ "UX/UI Designer",
profession == "'Digital Marketer'" ~ "Digital Marketer",
profession == "'Content Writer'" ~ "Content Writer",
profession == "'Educational Consultant'" ~ "Educational Consultant",
TRUE ~ profession # Leave valid entries as they are
))
# Fixing the `work_pressure` variable for proper scaling
depression_data <- depression_data %>%
mutate(work_pressure = case_when(
work_pressure == 0 ~ 0,
work_pressure == 2 ~ 1,
work_pressure == 5 ~ 3
))
# Fixing the `sleep_duration` variable to change invalid entries
depression_data <- depression_data %>%
mutate(sleep_duration = case_when(
sleep_duration == "'5-6 hours'" ~ "5-6 hours",
sleep_duration == "'Less than 5 hours'" ~ "Less than 5 hours",
sleep_duration == "'7-8 hours'" ~ "7-8 hours",
sleep_duration == "'More than 8 hours'" ~ "More than 8 hours",
sleep_duration == "Others" ~ "Other"
))
# Factorizing the `sleep_duration` variable
depression_data <- depression_data %>%
mutate(sleep_duration = factor(sleep_duration,
levels = c("Less than 5 hours",
"5-6 hours",
"7-8 hours",
"More than 8 hours",
"Other"),
ordered = TRUE))
# Fixing the `dietary_habits` variable to change misspelling
depression_data <- depression_data %>%
mutate(dietary_habits = case_when(
dietary_habits == "Others" ~ "Other",
TRUE ~ dietary_habits
))
# Factorizing the `dietary_habits` variable
depression_data <- depression_data %>%
mutate(dietary_habits = factor(dietary_habits,
levels = c("Healthy", "Moderate", "Unhealthy",
"Other"),
ordered = TRUE))
# Fixing the `degree` variable to change invalid entries
depression_data <- depression_data %>%
mutate(degree = case_when(
degree == "'Class 12'" ~ "Diploma",
degree == "ME" ~ "M.Tech",
degree == "BSc" ~ "B.Sc.",
degree == "BCA" ~ "B.C.A.",
degree == "High School" ~ "Other",
TRUE ~ degree
))
# Factorizing the `degree variable`
degree_levels <- c(
"High School",
"BA", "B.Sc.", "B.Com", "B.C.A.", "B.Pharm", "B.Ed", "B.Tech", "BE", "BHM", "B.Arch", "BBA",
"MA", "MSc", "MBA", "M.Com", "MCA", "M.Tech", "M.Ed", "M.Pharm", "MHM",
"LLB", "LLM", "MD", "MBBS",
"PhD",
"Others"
)
depression_data <- depression_data %>%
mutate(degree = factor(degree, levels = degree_levels, ordered = TRUE))
# Factorizing the `suicidal_thoughts` variable
depression_data$suicidal_thoughts <- factor(depression_data$suicidal_thoughts)
# Fixing the `financial_stress` variable
depression_data$financial_stress <- as.numeric(depression_data$financial_stress)
# Factorizing the `fam_mental_illness` variable
depression_data$fam_mental_illness <- factor(depression_data$fam_mental_illness)
# Turing the `depression` variable back to "yes" and "no" for visualization purposes
depression_data <- depression_data %>%
mutate(depression = case_when(
depression == 0 ~ "No",
depression == 1 ~ "Yes"
))
# Factorizing the `depression` variable
depression_data$depression <- factor(depression_data$depression)
# Check data types of the variables again to ensure everything was properly done
str(depression_data)
